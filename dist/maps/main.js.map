{"version":3,"file":"../main.js","sources":["main.coffee"],"names":[],"mappings":"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","sourcesContent":["#################\n#### HELPERS ####\n#################\n\nbyId = -> document.getElementById arguments...\ndebug = ->\n\tconsole.log \"[DEBUG]\", arguments...\n\n##################\n#### ELEMENTS ####\n##################\n\n# $ here means vanilla element, not JQuery element\n$chunks = byId \"chunks\"\n$cont   = byId \"container\"\n$spacer = byId \"spacer\"\n$table  = byId \"table\"\n\n###################\n#### CONSTANTS ####\n###################\n\nCHUNK_SIZE = 50\nCHUNK_PX_SIZE = 0\n\nTOTAL_SIZE   = 0\nTOTAL_CHUNKS = 0\nALL_PX_SIZE  = 0\n\n# calculate chunk pixel size\ndo ->\n\t# new fake tbody\n\t$tbody = document.createElement \"tbody\"\n\n\t# fill tbody with CHUNKS_SIZE lines of fake content\n\ti = 0\n\thtml = \"\"\n\twhile i < CHUNK_SIZE\n\t\thtml += \"<tr class='row'><td>\" + i + \"</td></tr>\"\n\t\ti++\n\t$tbody.innerHTML = html\n\n\t# add tbody to table\n\t$table.appendChild $tbody\n\n\t# check height\n\tCHUNK_PX_SIZE = $tbody.clientHeight\n\n\t# remove from table\n\t$table.removeChild $tbody\n\n\t# message\n\tdebug \"chunk pixel size:\", CHUNK_PX_SIZE\n\ngraph = []\n\nclass App\n\tconstructor: ->\n\t\t# server replaces {{.}} into WebSocket URL\n\t\t@ws = new WebSocket \"{{.}}\"\n\t\t@$activeChunks = {}\n\t\t@readyState = 2\n\t\t@datas = {}\n\t\t@i = 0\n\n\tbind: ->\n\t\tself = @\n\t\t$cont.onscroll = -> self.onscroll.apply self, arguments\n\n\t\t@ws.onmessage = -> self.commands.message.apply self, arguments\n\t\t@ws.onopen    = -> self.commands.open.apply self,    arguments\n\t\t@ws.onerror   = -> self.commands.error.apply self,   arguments\n\t\t@ws.onclose   = -> self.commands.close.apply self,   arguments\n\n\tcommands:\n\t\tlines: (n) ->\n\t\t\t@calculateSize n\n\n\t\tmessage: (msg) ->\n\t\t\tdata = JSON.parse msg.data\n\n\t\t\tswitch data.type\n\t\t\t\twhen \"linesCount\"\n\t\t\t\t\t@commands.lines.call @, data.linesCount\n\t\t\t\t\tdebug \"lines message:\", data.linesCount\n\t\t\t\t\t@readyState--\n\n\t\t\t\twhen \"read\"\n\t\t\t\t\tdebug \"data message\"\n\t\t\t\t\t@push.call @, data.lines, data.id\n\n\t\t\t\twhen \"error\"\n\t\t\t\t\talert \"ERROR: \" + data.error\n\n\t\topen: ->\n\t\t\tdebug \"connection open\"\n\t\t\t@ws.send '{\"type\":\"linesCount\"}'\n\t\t\t@readyState--\n\n\t\terror: (err) ->\n\t\t\tdebug \"connection error:\", err\n\n\t\tclose: ->\n\t\t\tdebug \"connection closed\"\n\n\tonscroll: ->\n\t\tif @readyState <= 0\n\t\t\t# calculate top and bottom of container\n\t\t\ttop    = $cont.scrollTop\n\t\t\tbottom = top + $cont.clientHeight\n\n\t\t\tself = @\n\t\t\tloadChunk = (currentChunk) ->\n\t\t\t\t# if chunk is inactive\n\t\t\t\tunless self.$activeChunks[currentChunk]?\n\t\t\t\t\t# positions\n\t\t\t\t\t$chunk = self.$activeChunks[currentChunk] = document.createElement(\"tbody\")\n\t\t\t\t\t$chunk.style.position = \"absolute\"\n\t\t\t\t\t$chunk.style.top = (currentChunk * CHUNK_PX_SIZE) + \"px\"\n\n\t\t\t\t\t# load chunk content\n\t\t\t\t\tcstart = currentChunk * CHUNK_SIZE\n\t\t\t\t\tcend   = cstart + CHUNK_SIZE\n\t\t\t\t\tself.i++\n\t\t\t\t\tself.get cstart, cend, self.i\n\n\t\t\t\t\tdata = await self.receive self.i\n\n\t\t\t\t\t# fill chunk element with CSV data\n\t\t\t\t\tarr = parseCSV data, \";\"\n\n\t\t\t\t\thtml = \"\"\n\t\t\t\t\tfor line in arr\n\t\t\t\t\t\thtml += \"<tr class='row'>\"\n\t\t\t\t\t\tfor item in line\n\t\t\t\t\t\t\thtml += \"<td>\" + item + \"</td>\"\n\t\t\t\t\t\thtml += \"</tr>\"\n\n\t\t\t\t\t$chunk.innerHTML = html\n\t\t\t\t\t$chunk.chunkData = arr\n\n\t\t\t\t\t# add chunk to table\n\t\t\t\t\t$table.appendChild $chunk\n\n\t\t\t\t\t# message\n\t\t\t\t\tdebug \"loaded new chunk\", $chunk\n\n\t\t\t# load chunks, bounding to user view\n\t\t\tloadChunk Math.floor top    / CHUNK_PX_SIZE\n\t\t\tloadChunk Math.floor bottom / CHUNK_PX_SIZE\n\n\t\t\tgr = []\n\n\t\t\t# delete invisible chunks\n\t\t\tfor name, chunk of @$activeChunks\n\t\t\t\ttry\n\t\t\t\t\t# calculate bottom and top of chunk\n\t\t\t\t\tchunkTop = parseInt chunk.style.top\n\t\t\t\t\tchunkBottom = chunkTop + CHUNK_PX_SIZE\n\n\t\t\t\t\t# check, is chunk fits into container\n\t\t\t\t\tunless (((chunkTop <= top) && (chunkBottom >= top)) or ((chunkTop <= bottom) && (chunkBottom >= bottom)))\n\t\t\t\t\t\t# remove chunk from active chunks\n\t\t\t\t\t\tdelete @$activeChunks[name]\n\n\t\t\t\t\t\t# remove chunk from table\n\t\t\t\t\t\t$table.removeChild chunk\n\n\t\t\t\t\t\t# message\n\t\t\t\t\t\tdebug \"deleted invisible chunk\", chunk\n\t\t\t\t\telse\n\t\t\t\t\t\tgr.push chunk.chunkData\n\n\t\t\tgraph = gr\n\n\n\n\tcalculateSize: (size) ->\n\t\tTOTAL_SIZE   = size\n\t\tTOTAL_CHUNKS = Math.ceil TOTAL_SIZE / CHUNK_SIZE\n\t\tALL_PX_SIZE = CHUNK_PX_SIZE * TOTAL_CHUNKS\n\n\t\t$spacer.style.height = ALL_PX_SIZE + \"px\"\n\n\tpush: (data, id) ->\n\t\t@datas[id].data = data\n\t\t@datas[id].received = true\n\n\treceive: (id) ->\n\t\t@datas[id] = received: false\n\t\tself = @\n\t\treturn new Promise (r) ->\n\t\t\tObject.defineProperty self.datas[id], \"received\",\n\t\t\t\tset: ->\n\t\t\t\t\tdata = self.datas[id]\n\t\t\t\t\tdelete self.datas[id]\n\t\t\t\t\tr data.data\n\n\tget: (start, end, id) ->\n\t\t@ws.send '{\"type\":\"read\",\"start\":'+start+',\"end\":'+end+',\"id\":'+id+'}'\n\napp = new App\napp.bind()\n"]}